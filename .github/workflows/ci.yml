name: Build app

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build_server:
    name: Fileshare-server
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@main
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

      - name: "Cache cargo"
        id: cache-cargo
        uses: "actions/cache@v4"
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          save-always: true
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-


      - name: Compile
        id: compile
        uses: rust-build/rust-build.action@v1.4.5
        with:
          RUSTTARGET: x86_64-unknown-linux-musl
          UPLOAD_MODE: none
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: server-artifact
          retention-days: 1
          path: |
            ${{ steps.compile.outputs.BUILT_ARCHIVE }}
            ${{ steps.compile.outputs.BUILT_CHECKSUM }}

  build_web_app:
    name: Fileshare-webapp
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - working-directory: ./web_client
        run: npm install
      - working-directory: ./web_client
        run: npm run prod
      - uses: actions/upload-artifact@main
        with:
          name: webapp-artifact
          retention-days: 1
          path: ./web_client/public/*

  package:
    name: package app
    runs-on: ubuntu-latest
    needs: [build_server, build_web_app]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Retrieve server data
        uses: actions/download-artifact@main
        with:
          name: server-artifact
          path: web_client/
      - name: Retrieve webapp data
        uses: actions/download-artifact@main
        with:
          name: webapp-artifact
          path: /
      - run: ls -la
      - run: cd web_client && ls -la
      - uses: actions/upload-artifact@main
        with:
          name: FileshareApp
          path: |
            /web_client/public
